#!/usr/bin/env bash

###################################################################################################
#                                                                                                 #
#   Feature :- MetaData Recovery                                                                  #
#   Developer :- Abhishek Sharma 	                                                          #
#   Modified Date :- 20th feb 2023                                                                # 
#                                                                                                 #
###################################################################################################

source $NS_WDIR/lib/utilities.sh
source $NS_WDIR/lib/smoke.properties

PATH_TO_TEST_RUN="$NS_WDIR/logs/TR$(get_test_idx)"
PARTITION_PATH="${PATH_TO_TEST_RUN}/$(get_test_partition)"
RAW_DATA_HOME="${PARTITION_PATH}/nd/raw_data"
NDCTrace_Logs="${PARTITION_PATH}/nd/logs/ndc_trace.log"
AVAILABLE_TIERS=$Project

function main() {
	case $(get_test_name) in
		"GOLANG-010-001") handle_golang_010_001_case ;;
		"GOLANG-010-002") handle_golang_010_002_case ;;
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
	esac
}

function log_status_int() {
	local agentID="$1"
	local status="$2"
	local why="$3"
	log_status_and_exit $agentID $productid $categoryid $status "${why}"
}

function handle_unknown_case() {
	error "Testcase name not found"
	log_status_int "FAIL" "Testcase name not found"
}

function raw_data_val(){
        RAW_DATA_FILE=$1
        eventId0=$(grep -c "^0," $RAW_DATA_FILE)
        eventId2=$(grep -c "^2," $RAW_DATA_FILE)
        eventId4=$(grep -c "^4," $RAW_DATA_FILE)
        eventId5=$(grep -c "^5," $RAW_DATA_FILE)
        eventId99=$(grep -c "^99," $RAW_DATA_FILE)
        eventId11=$(grep -c "^11," $RAW_DATA_FILE)
        eventId10=$(grep -c "^10," $RAW_DATA_FILE)
        filesize=$(ls -ltrh $RAW_DATA_FILE | cut -d ' ' -f5)
        if [ ! -e $RAW_DATA_FILE ];then
                log_status_int "${tier}" "FAIL" "Rawdata file does not exist: ${RAW_DATA_FILE}"
                return 1
        else
                log_status_int "${tier}" "PASS" "Rawdata file exists: ${RAW_DATA_FILE}"
        fi

        if [ ! -s $RAW_DATA_FILE ];then
                log_status_int "${tier}" "FAIL" "Rawdata file having zero size: ${filesize}"
                return 1
        else
                log_status_int "${tier}" "PASS" "Rawdata file is not zero size: ${filesize}"
        fi

        if [ $eventId0 -eq 1 ];then
                log_status_int "${tier}" "PASS" "Event id 0 detected: ${eventId0}"
        else
                log_status_int "${tier}" "Fail" "Event id 0 is not detected: ${eventId0}"
        fi

        if [ $eventId99 -eq 1 ];then
                log_status_int "${tier}" "PASS" "Event id 99  detected: ${eventId99}"
        else
                log_status_int "${tier}" "FAIL" "Event id 99 is not detected: ${eventId99}"
        fi

        if [ $eventId11 -eq 1 ];then
                log_status_int "${tier}" "PASS" "Event id 11 is detected: ${eventId11}"
        else
                log_status_int "${tier}" "FAIL" "Event id 11 is not detected: ${eventId11}"
        fi

        if [ $eventId5 -lt 1 ];then
                log_status_int "${tier}" "FAIL" "Event id 5 is not  detected: ${eventId5}"
        else
                log_status_int "${tier}" "PASS" "Event id 5 is  detected: ${eventId5}"
        fi

        debug "eventId2=$eventId2, eventId4=$eventId4"
        if [ $eventId2 -lt 1 ] || [ $eventId4 -lt 1 ];then
                 log_status_int "${tier}" "FAIL" "Event ID 2 and 4 are not detected with bciPct%=${bcipct}.No of flowpath of eventId2: ${eventId2} and No of fps of eventId4: ${eventId4}}"
        else
                 log_status_int "${tier}" "PASS" "Event ID 2 and 4 are detected with bciPct%=${bcipct}.No of flowpath of eventId2: ${eventId2} and No of fps of eventId4: ${eventId4}}"
        fi

        if [ $eventId2 -ne $eventId4 ];then
                log_status_int "${tier}" "FAIL" "Event ID 2 and 4 are not eqaul with bciPct%=${bcipct}.No of flowpath of eventId2: ${eventId2} and No of fps of eventId4: ${eventId4}}"

        else
                log_status_int "${tier}" "PASS" "Event ID 2 and 4 are equal with bciPct%=${bcipct}.No of flowpath of eventId2: ${eventId2} and No of fps of eventId4: ${eventId4}}"
        fi
        return 0
}

function handle_golang_010_001_case() {
	for tier in $AVAILABLE_TIERS;do
		if [ $(ls $RAW_DATA_HOME |grep "^$tier"|head -1) ];then
			DATA_FILE=$RAW_DATA_HOME/$(ls $RAW_DATA_HOME |grep "^$tier"|tail -1)
			check_MetaDataRecovery1 "$DATA_FILE"
			RC=$?
			if [ $count -gt 0 ];then
                		raw_data_val $DATA_FILE
            		fi
		    	if [ $RC -eq 0 ];then
			    log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for ALL format and dumped in Rawdata File"
		    	fi
        	else
	            log_status_int "${tier}" "FAIL" "Raw data has not formed for Tier=${tier}"
        	fi
	done
}

function handle_golang_010_002_case() {
	for tier in $AVAILABLE_TIERS;do
		if [ $(ls $RAW_DATA_HOME |grep "^$tier"|head -1) ];then
			DATA_FILE=$RAW_DATA_HOME/$(ls $RAW_DATA_HOME |grep "^$tier"|tail -1)
			check_MetaDataRecovery0 "$DATA_FILE"
			RC=$?
			if [ $count -gt 0 ];then
                		verify_rawdata $DATA_FILE
            		fi
		    	if [ $RC -eq 0 ];then
			    log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for ALL format and dumped in Console (ndc_trace Log) File "
		    	fi
        	else
            		log_status_int "${tier}" "FAIL" "Raw data has not formed for Tier=${tier}"
        	fi
	done
}

function check_MetaDataRecovery1(){
	RAW_DATA_FILE=$1
	count=0;
	WithoutMeta_Data5=$(grep "^5," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|uniq|wc -l)
	WithMeta_Data5=$(grep "^5," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|wc -l)
	WithoutMeta_Data7=$(grep "^7," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|uniq|wc -l)
	WithMeta_Data7=$(grep "^7," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|wc -l)
	WithoutMeta_Data6=$(grep "^6," ${RAW_DATA_FILE} |cut -d , -f3|sort -n|uniq|wc -l)
	WithMeta_Data6=$(grep "^6," ${RAW_DATA_FILE} |cut -d , -f3|sort -n|wc -l)
	WithoutMeta_Data22=$(grep "^22," ${RAW_DATA_FILE} |cut -d , -f2|sort -n|uniq|wc -l)
	WithMeta_Data22=$(grep "^22," ${RAW_DATA_FILE} |cut -d , -f2|sort -n|wc -l)
    	if [ $WithoutMeta_Data5 -lt $WithMeta_Data5 ];then
		log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 5 Records"
    	else
		log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 5 Records"
		((count++))
        	return 1
    	fi
    	if [ $WithoutMeta_Data7 -lt $WithMeta_Data7 ];then
		log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 7 Records"
	else
		log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 7 Records"
		((count++))
        	return 1
	fi
    	if [ $WithoutMeta_Data22 -le $WithMeta_Data22 ];then	
		log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 22 Records"
	else
		log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 22 Records"
		((count++))
                return 1
	fi
    	if [ -n $(grep "nd_meta_data_req:action=send_meta_data" $NDCTrace_Logs|egrep -o "$tier"|head -1) ];then
		log_status_int "$tier" "PASS" "MetaData recovery Message Observed in ndc_trace Log File"
	else
		log_status_int "$tier" "FAIL" "MetaData recovery Message NOT Observed in ndc_trace Log File"
		((count++))
                return 1
	fi
    	if [  $WithoutMeta_Data6 -lt $WithMeta_Data6 ];then
        	log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 6 Records"
	else
		log_status_int "$tier" "PASS" "MetaData Recovery NOT Done for 6 Records"
		((count++))
                return 1
	fi
	return 0
}

function check_MetaDataRecovery0(){
    RAW_DATA_FILE=$1
    count=0;
    WithoutMeta_Data5=$(grep "^5," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|uniq|wc -l)
    WithMeta_Data5=$(grep "^5," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|wc -l)
    WithoutMeta_Data7=$(grep "^7," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|uniq|wc -l)
    WithMeta_Data7=$(grep "^7," ${RAW_DATA_FILE}|cut -d  , -f3|sort -n|wc -l)
    WithoutMeta_Data6=$(grep "^6," ${RAW_DATA_FILE} |cut -d , -f3|sort -n|uniq|wc -l)
    WithMeta_Data6=$(grep "^6," ${RAW_DATA_FILE} |cut -d , -f3|sort -n|wc -l)
    WithoutMeta_Data22=$(grep "^22," ${RAW_DATA_FILE} |cut -d , -f2|sort -n|uniq|wc -l)
    WithMeta_Data22=$(grep "^22," ${RAW_DATA_FILE} |cut -d , -f2|sort -n|wc -l)
    if [ -n $(grep "^5," ${RAW_DATA_FILE} | cut -d , -f3|head -1) ];then
	log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 5 Records"
    else
	log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 5 Records"
	((count++))
        return 1
    fi
    if [ -n $(grep "^7," ${RAW_DATA_FILE} | cut -d , -f3|head -1) ];then
	log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 7 Records"
    else
	log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 7 Records"
	((count++))
        return 1
    fi
    if [ -n $(grep "^22," ${RAW_DATA_FILE} | cut -d , -f3|head -1) ];then	
	log_status_int "$tier" "PASS" "MetaData Recovery Succesfully Done for 22 Records"
    else
	log_status_int "$tier" "FAIL" "MetaData Recovery NOT Done for 22 Records"
	((count++))
        return 1
    fi
    if [ -n $(grep "nd_meta_data_req:action=send_meta_data" $NDCTrace_Logs|egrep -o "$tier"|head -1) ];then
	log_status_int "$tier" "PASS" "MetaData recovery Message Observed in ndc_trace Log File"
    else
	log_status_int "$tier" "FAIL" "MetaData recovery Message NOT Observed in ndc_trace Log File"
	((count++))
        return 1
    fi
    return 0
}

main
