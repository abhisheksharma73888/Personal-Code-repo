#!/usr/bin/env bash
# Generated by: needle
#    Date Time: 01/11/18 04:59:42 PM
#  Description: Check status to validate cases for smoke
# 
# Conventions
#   1. Two(2) space indentation. No tabs
#   2. Variables and function starts with snake_case
#		3. Constants are declared with ALL_CAPS

# Source out required files
source $NS_WDIR/lib/utilities.sh
source $NS_WDIR/lib/helpers.sh
source $NS_WDIR/lib/smoke.properties

TEST_RUN_PATH="$NS_WDIR/logs/TR$(get_test_idx)"                                                
PARTITION_PATH="$TEST_RUN_PATH/$(get_test_partition)"                                          
RAW_DATA_FILE="$PARTITION_PATH/nd/raw_data/NodeJS_CAV-QA-30-28_cav-nsecom-01.txt"                           
HOTSPOT_THREAD_FILE="${PARTITION_PATH}/nd/csv/NDAutoSensorHotSpotThreads.csv"      
HOTSPOT_THREADCOUNT_FILE="${PARTITION_PATH}/nd/csv/NDAutoSensorThreadsCount.csv"      
SUMMARY_TOP_FILE="$TEST_RUN_PATH/summary.top"            

# Entry point to check status
# Add cases to handle your validation
function main() {
	case $(get_test_name) in
    "NETJS-002-001") handle_netjs_002_001_case ;;
    "NETJS-002-002") handle_netjs_002_002_case ;;
    "NETJS-002-003") handle_netjs_002_003_case ;;
    "NETJS-002-004") handle_netjs_002_004_case ;;
    "NETJS-002-005") handle_netjs_002_005_case ;;
    "NETJS-002-006") handle_netjs_002_006_case ;;
# End case def
		*) handle_unknown_case ;;
		?) handle_unknown_case ;;
  esac
}

# category id
function log_status_int() {
	local _status="$1"
	local why="$2"
	# Setting product id and category id as 1000 in case $productid or $categoryid may be empty
	# Set the productid, categoryid in smoke/etc/smoke.properties to
	# override this behaviour
	local productid=${productid:-1000}
	local categoryid=${categoryid:-1000}
	log_status_and_exit ${productid} ${categoryid} ${_status} "${why}"
}


function handle_unknown_case() {
	error "Testcase name not found"
	log_status_int "FAIL" "Testcase name not found"
}

function handle_netjs_002_001_case() {
    if  [ -s $HOTSPOT_THREAD_FILE ]; then                                                      
        log_status_int "PASS" "Autosensor  hotspot file is present in testrun with hotspot entries"
    else                                                                                       
        log_status_int "FAIL" "Autosensor  hotspot file is not present in testrun or might have 0 data"
    fi
}
function handle_netjs_002_002_case() {
  threadname="Event Dispatch Thread"
  for hotspot_thread_name  in "$(cut -d ',' -f5 $HOTSPOT_THREAD_FILE|head -1)";do
  debug "hotspot_thread_name: $hotspot_thread_name and threadname: $threadname"
  if [ "$hotspot_thread_name" != "$threadname" ];then
     log_status_int "FAIL" "Actual thread name not  detected; Actual thread name should EventDispatchThread"
  fi
     log_status_int "PASS" "Thread Name detected ${threadname}"
  done
}


function handle_netjs_002_003_case() {
   threadstate="Running"
   for hotspot_thread_state in $(cut -d ',' -f9 $HOTSPOT_THREAD_FILE);do
   debug "hotspot_thread_state: $hotspot_thread_state and threadstate: $threadstate"
     if [ "$hotspot_thread_state" != "$threadstate" ];then
       log_status_int "FAIL" "Actual thread state not  detected; Actual thread state should Running"
     fi
   log_status_int "PASS" "Actual thread state detected as Running"
   done
}
function handle_netjs_002_004_case() {
  hotspot_thread_id=$(cut -d ',' -f4 ${HOTSPOT_THREAD_FILE} | head -1 )
  if [ ! -z "${hotspot_thread_id}" ];then
        log_status_int "PASS" "Nodejs is single threaded and thread id is  ${hotspot_thread_id}"
    else
        log_status_int "FAIL" "Thread id should not different in Nodejs  ${hotspot_thread_id}"
    fi
}
function handle_netjs_002_005_case() {
  if [ -e ${HOTSPOT_THREADCOUNT_FILE} ];then
        log_status_int "PASS" "NDAutoSensorThreadsCount.csv file is present"
    else
        log_status_int "FAIL" "NDAutoSensorThreadsCount.csv file is not present"
    fi
}
function handle_netjs_002_006_case() {
  if [ -e $HOTSPOT_THREAD_FILE ];then
        log_status_int "PASS" "Autosensor  hotspot file NDAutoSensorHotSpotThreads.csv is present in testrun"
    else
        log_status_int "FAIL" "Autosensor  hotspot file NDAutoSensorHotSpotThreads.csv is not present in testrun"
    fi
}

main
