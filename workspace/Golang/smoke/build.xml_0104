<?xml version="1.0"?>
<project name="NetDiagnostics Smoke Automation" basedir=".">
    <property environment="env"/>
    <property name="ns.wdir" value="/home/cavisson/work"/>
    <!--property definition-->
    <property name="smoke.project" value="automation"/>
    <property name="smoke.subproject" value="smoke"/>
    <property name="ndprof.dir" value="${ns.wdir}/ndprof/${smoke.subproject}"/>
    <property name="topology.dir" value="${ns.wdir}/topology/${smoke.subproject}"/>
    <property name="scripts.dir" value="${ns.wdir}/workspace/admin/default/cavisson/${smoke.project}/${smoke.subproject}/scripts"/>
    <property name="scenarios.dir" value="${ns.wdir}/workspace/admin/default/cavisson/${smoke.project}/${smoke.subproject}/scenarios"/>
    <property name="testsuites.dir" value="${ns.wdir}/workspace/admin/default/cavisson/${smoke.project}/${smoke.subproject}/testsuites/"/>
    <property name="testcases.dir" value="${ns.wdir}/workspace/admin/default/cavisson/${smoke.project}/${smoke.subproject}/testcases/"/>
    <property name="ndprof.dir" value="${ns.wdir}/ndprof/${smoke.subproject}"/> 
    <property name="topology.dir" value="${ns.wdir}/topology/${smoke.subproject}"/> 
    <property name="smoke.mailing.dir" value="${basedir}/mailing"/>

    <!--target definition-->
    <target name="clean">
	<delete dir="${scripts.dir}"/>
        <delete dir="${scenarios.dir}"/>
        <delete dir="${ndprof.dir}"/>
       <delete dir="${topology.dir}"/>
        <delete dir="${testsuites.dir}"/>
	<delete dir="${testcases.dir}"/>
	    <delete dir="${ns.wdir}/lib"/>
	    <!-- <delete dir="${testsuites.dir}"/>-->
    </target>

    <target name="create-workbench">
	<mkdir dir="${scripts.dir}"/>
	<mkdir dir="${scenarios.dir}"/>
        <mkdir dir="${ndprof.dir}"/>
	<mkdir dir="${topology.dir}"/>
        <mkdir dir="${testsuites.dir}"/>
	<mkdir dir="${testcases.dir}"/>
	    <mkdir dir="${ns.wdir}/lib"/>
	    <!--   <mkdir dir="${testsuites.dir}"/>-->
    </target>

    <target name="copy-workbench-files" depends="create-workbench">
    <copy todir="${scripts.dir}">
           <fileset dir="scripts"/>
       </copy>

       <copy todir="${scenarios.dir}">
           <fileset dir="scenarios"/>
       </copy>

       <copy todir="${ndprof.dir}">
           <fileset dir="ndprof"/>
       </copy>

       <copy todir="${topology.dir}">
           <fileset dir="topology"/>
       </copy>

       <copy todir="${testsuites.dir}">
           <fileset dir="testsuites"/>
       </copy>

       <copy todir="${testcases.dir}">
           <fileset dir="testcases"/>
       </copy>
      
       <copy todir="${ns.wdir}/lib">
           <fileset dir="${lib.dir}"/>
       </copy>

    <!--	<copy todir="${testsuites.dir}">
           <fileset dir="testsuites"/>
    </copy>-->

       <chmod perm="775">
	      <fileset dir="${testcases.dir}">
              <include name="**/*_test_*"/>
              <include name="**/check_status"/>
          </fileset>
	<dirset dir="${scripts.dir}">
              <include name="**/*"/>
          </dirset>
          <dirset dir="${scenarios.dir}">
              <include name="**/*"/>
		    </dirset>
		    <!--  <dirset dir="${testcases.dir}">
              <include name="**/*"/>
		    </dirset>-->
          <dirset dir="${testsuites.dir}">
              <include name="**/*"/>
          </dirset>
          <dirset dir="${ndprof.dir}">
              <include name="**/*"/>
          </dirset>
          <dirset dir="${topology.dir}">
              <include name="**/*"/>
          </dirset>
          <dirset dir="${ns.wdir}/lib">
              <include name="**/*"/>
          </dirset>
	<!--	  <dirset dir="${testsuites.dir}">
              <include name="**/*"/>
      </dirset>-->

       </chmod>
	
       <chmod file="${scripts.dir}" perm="775" type="both"/>
       <chmod file="${scenarios.dir}" perm="775" type="both"/>
	       <!--<chmod file="${testcases.dir}" perm="775" type="both"/>-->
       <chmod file="${testsuites.dir}" perm="775" type="both"/>
       <chmod file="${ndprof.dir}" perm="775" type="both"/>
       <chmod file="${topology.dir}" perm="775" type="both"/>
       <chmod file="${ns.wdir}/lib" perm="775" type="both"/>
       <!--       <chmod file="${testsuites.dir}" perm="775" type="both"/>-->
       
	</target>

	<target name="run-smoke" depends="clean, copy-workbench-files, calc-start-time">
		<!--    <target name="run-smoke" depends="clean, copy-workbench-files, calc-start-time">-->
        <echo message="Running ..."/>
        <exec executable="${bash}" failonerror="false">
            <arg value="${nd.ts.run.shell}"/>
            <arg value="${smoke.project}/${smoke.subproject}/smoke"/>
        </exec>
    </target>
	
	
	<target name="run-internal" depends="clean, copy-workbench-files, calc-start-time">
        <exec executable="${bash}" failonerror="false">
            <arg value="${nd.ts.run.shell}"/>
            <arg value="${smoke.project}/${smoke.subproject}/debug"/>
        </exec>
    </target>
 
     <target name="run" depends="run-internal"/> 
     <target name="smoke" depends="run-smoke, gen-reports"/> 
    <target name="run-smoke-with-report" depends="calc-start-time, run-internal, gen-reports"/>


    <target name="calc-start-time">
        <exec executable="${bash}" outputproperty="automation.start.time">
            <arg value="-c"/>
            <arg value="date +'%D %r'"/>
        </exec>
        <echo message="Test started at: ${automation.start.time}"/>
    </target>

    <target name="calc-end-time">
        <exec executable="${bash}" outputproperty="automation.end.time">
            <arg value="-c"/>
            <arg value="date +'%D %r'"/>
        </exec>
        <echo message="Test ended at: ${automation.end.time}"/>
    </target>
    
    <target name="upload-results">
        <exec executable="get_latest_file.rb" outputproperty="smoke.result.file" failonerror="true">
            <arg value="-d"/>
            <arg value="${results.dir}/${release.info}/${build.info}"/>
            <arg value="-p"/>
            <arg value="*.txt"/>
        </exec>
        <echo message="Uploading results to remote server"/>
        <exec executable="${nd.db.upload.script}">
            <arg value="-f"/>
            <arg value="${smoke.result.file}"/>
            <arg value="-r"/>
            <arg value="${release.info}"/>
            <arg value="-v"/>
            <arg value="${build.info}"/>
        </exec>
        <echo message="Done"/>
</target>
<!--Uncomment this when mail.properties issue is resolved (Failed to connect)"-->
    
	    
<!-- <target name="gen-reports" depends="calc-start-time, calc-end-time, update-email-config">
	<target name="gen-reports" depends="update-email-config"> comment earlier
      <echo message="Loading properties from ${smoke.mailing.dir}/mail.properties"/>
      <property file="${smoke.mailing.dir}/mail.properties"/>
      <mail 
            enableStartTLS="true"
	    ssl="true"
	    mailhost="${mail.host}"
            mailport="${mail.port}"
            user="${mail.user}"
            password="${mail.password}"
            tolist="${mail.to.list}"
            cclist="${mail.cc.list}"
            messageMimeType="text/html"
	    subject="[Java-Agent] NetDiagnostics Smoke results for R${release.info}.B${build.info}"
            messagefile="${mail.out.dir}/smoke.mail.body.html">
	        <from address="automation@cavisson.com"/>subject="[Java-Agent]NetDiagnostics Smoke results for R${release.info}.B${build.info}"commented earlier
	     	      <from address="ndteam.cavisson@gmail.com"/>
	 <from address="autojava999@gmail.com"/>
       </mail>
    </target>-->

    <!-- //config.py-->
     <target name="gen-reports" depends="calc-start-time, calc-end-time, update-email-config">
    <!--< <target name="gen-reports"> //commented earlier-->
	    <echo message="Copy HTML report file to mailing server"/>					
    <scp toDir="${mailing.server.user}@${mailing.server.host}:${mailing.server.smoke.dir}" password="${mailing.server.passwd}" trust="true">
         <fileset dir="${smoke.mailing.dir}">
         <include name="Smoke.mail.body.html"/>
         </fileset>
    </scp>
    <echo message="Copy mailing config file to mailing server"/>
    <scp toDir="${mailing.server.user}@${mailing.server.host}:${mailing.server.dir}" password="${mailing.server.passwd}" trust="true">
         <fileset dir="${smoke.mailing.dir}">
         <include name="config.py"/>
         </fileset>
    </scp>
    <echo message="Executing the mailing pyscript with all configs"/>
         <sshexec host="${mailing.server.host}"
	          username="${mailing.server.user}"
		  password="${mailing.server.passwd}"
		  trust="true"
		  command="python3 ${mailing.server.script} -A Smoke -R ${release.info} -B ${build.info}"/>
	    </target>


    <target name="core-email">
      <echo message="Going to send mail for core dumps found"/>
      <property file="${core.mailing.dir}/mail.properties"/>
      <mail mailhost="${mail.host}"
            mailport="${mail.port}"
            user="${mail.user}"
	    ssl="true"
            password="${mail.password}"
            tolist="${mail.to.list}"
            cclist="${mail.cc.list}"
            messageMimeType="text/html"
            subject="[Alert]Core Dump detected for R${release.info}.B${build.info}"
            messagefile="${core.mailing.dir}/Smoke.mail.body.html">
	<!--<from address="automation@cavisson.com"/>-->
	<!--<from address="ndteam.cavisson@gmail.com"/>-->
	 <from address="autojava999@gmail.com"/>
      </mail>
    </target>

    <target name="update-email-config" description="Updates email configurations post test">
        <sleep seconds="1"/>
	<echo message="Woke up after 1 seconds"/>
	<exec executable="get_latest_file.rb" outputproperty="smoke.result.file" failonerror="true">
            <arg value="-d"/>
            <arg value="${results.dir}/${release.info}/${build.info}"/>
            <arg value="-p"/>
            <arg value="*.txt"/>
        </exec>
        <echo message="Result file is: ${smoke.result.file}"/>
        <exec executable="${nd.report.script}" failonerror="true">
            <arg value="-f"/>
            <arg value="${smoke.result.file}"/>
            <arg value="-c"/>
            <arg value="Smoke"/>
            <arg value="-r"/>
            <arg value="${release.info}"/>
            <arg value="-v"/>
            <arg value="${build.info}"/>
	    <arg value="-o"/>
	    <arg value="${smoke.mailing.dir}/Smoke.mail.body.html"/>
            <arg value="-s"/>
            <arg value="${automation.start.time}"/>
            <arg value="-e"/>
            <arg value="${automation.end.time}"/>
        </exec>
        <echo message="HTML content written to ${smoke.mailing.dir}/Smoke.mail.body.html"/>

    </target>

    <target name="update-core-email" description="Updates core email configurations">
        <sleep seconds="1"/>
        <echo message="Woke up after 1 seconds"/>
        <exec executable="nsi_find_core.py" outputproperty="core_found" failonerror="true">
          <arg value="-t"/>
          <arg value="3"/>
          <redirector output="${core.outfile}"/>
        </exec>
        <if>
          <not>
            <equals arg1="${core_found}" arg2=""/>
          </not>
          <then>
            <exec executable="${nd.core.script}" failonerror="true">
              <arg value="-f"/>
              <arg value="${core.outfile}"/>
              <arg value="-r"/>
              <arg value="${release.info}"/>
              <arg value="-v"/>
              <arg value="${build.info}"/>
              <arg value="-o"/>
              <arg value="${core.mailing.dir}/Smoke.mail.body.html"/>
            </exec>
            <echo message="HTML content written to ${core.mailing.dir}/Smoke.mail.body.html"/>

            <antcall target="core-email"/>
          </then>
          <else>
            <echo message="No cores were found"/>
          </else>
        </if>
    </target>
</project>
